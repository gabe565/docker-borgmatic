name: Build

on: push

env:
  BORGMATIC_REPO: ghcr.io/borgmatic-collective/borgmatic
  BORGMATIC_REF: 2.0.7

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/borgmatic
          tags: |
            type=raw,priority=1000,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=semver,pattern={{version}},value=${{ env.BORGMATIC_REF }},enable=${{ github.ref == 'refs/heads/main' }}
            type=semver,pattern={{major}}.{{minor}},value=${{ env.BORGMATIC_REF }},enable=${{ github.ref == 'refs/heads/main' }}
            type=semver,pattern={{major}},value=${{ env.BORGMATIC_REF }},enable=${{ github.ref == 'refs/heads/main' }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Build and Push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          pull: true
          push: ${{ github.secret_source == 'Actions' && steps.meta.outputs.tags != '' }}
          platforms: linux/amd64,linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BORGMATIC_REPO=${{ env.BORGMATIC_REPO }}
            BORGMATIC_REF=${{ env.BORGMATIC_REF }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
